GTCEuStartupEvents.registry('gtceu:recipe_type', event => {
    event.create('ore_laser')
         .category('ore_laser')
         .setEUIO('in')
         .setMaxIOSize(1, 4, 2, 4) // Max Item Inputs, Max Item Outputs, Max Fluid Inputs, Max Fluid Outputs
         .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
         .setSound(GTSoundEntries.JET_ENGINE)
         .setMaxTooltips(6)
})

GTCEuStartupEvents.registry('gtceu:machine', event => {
  event.create('ore_laser', 'multiblock')
      .rotationState(RotationState.NON_Y_AXIS)
      .recipeType('ore_laser')
      .recipeModifiers([GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.ELECTRIC_OVERCLOCK.apply(OverclockingLogic.PERFECT_OVERCLOCK)])
      .appearanceBlock(GTBlocks.CASING_PTFE_INERT)
      .pattern(definition => FactoryBlockPattern.start()
        .aisle('   CCC   ','   CCC   ','    C    ','         ','         ','         ','         ','   C C   ','   CCC   ','         ')
        .aisle('  CCCCC  ','  CCCCC  ','   DDD   ','   D D   ','         ','         ','   D D   ','  CCDCC  ','  CCCCC  ','   CCC   ')
        .aisle(' CCCCCCC ',' CCBCBCC ','  DBCBD  ','   B B   ','   B B   ','   B B   ','  DB BD  ',' CCCBCCC ',' CCCCCCC ','  CCCCC  ')
        .aisle(' CCCCCCC ',' CCCICCC ',' DDCICDD ','  BAIAB  ','  BAIAB  ','  BAIAB  ','  DAIAD  ','  DBIBD  ',' CCCCCCC ','  CCCCC  ')
        .aisle(' CCCCCCC ',' CCBCBCC ','  DBCBD  ','   B B   ','   B B   ','   B B   ','  DB BD  ',' CCCBCCC ',' CCCCCCC ','  CCCCC  ')
        .aisle('  CCCCC  ','  CCCCC  ','   DDD   ','   D D   ','         ','         ','   D D   ','  CCDCC  ','  CCCCC  ','   CCC   ')
        .aisle('   CCC   ','   CKC   ','    C    ','         ','         ','         ','         ','   C C   ','   CCC   ','         ')
          .where('K', Predicates.controller(Predicates.blocks(definition.get())))
          .where('I', Predicates.blocks('gtceu:filter_casing'))
          .where('A', Predicates.blocks('gtceu:heatproof_machine_casing'))
          .where('D', Predicates.blocks('gtceu:stable_machine_casing'))
          .where('B', Predicates.blocks('gtceu:black_steel_frame'))
          .where('C', Predicates.blocks(GTBlocks.CASING_PTFE_INERT.get())
            .or(Predicates.autoAbilities(definition.getRecipeTypes())
            .or(Predicates.abilities(PartAbility.IMPORT_FLUIDS))
                .or(Predicates.abilities(PartAbility.IMPORT_ITEMS))
                .or(Predicates.abilities(PartAbility.EXPORT_ITEMS))
                .or(Predicates.abilities(PartAbility.INPUT_ENERGY))
                .or(Predicates.abilities(PartAbility.MAINTENANCE))
                .or(Predicates.abilities(PartAbility.EXPORT_FLUIDS))
                .or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
          ))
          .build()
     )
     .workableCasingRenderer('gtceu:block/casings/solid/machine_casing_inert_ptfe', 
        'gtceu:block/multiblock/fusion_reactor', false)
})

//.setProgressBar(new ResourceTexture("kubejs:textures/gui/progress_bar_rocket.png"), FillDirection.LEFT_TO_RIGHT)